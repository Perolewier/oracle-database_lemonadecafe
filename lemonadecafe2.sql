-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-09-11 13:39:36 ICT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE bills (
    id_bill             NUMBER(7) NOT NULL,
    name                VARCHAR2(30) NOT NULL,
    transfer_date       DATE NOT NULL,
    total_pay           INTEGER NOT NULL,
    transactions_trn_id NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX bills__idx ON
    bills (
        transactions_trn_id
    ASC );

ALTER TABLE bills ADD CONSTRAINT bills_pk PRIMARY KEY ( id_bill );

CREATE TABLE cash (
    trn_id       NUMBER(7) NOT NULL,
    cash_status  VARCHAR2(30),
    cash_id_bill CHAR(15)
);

ALTER TABLE cash ADD CONSTRAINT cash_pk PRIMARY KEY ( trn_id );

CREATE TABLE cook (
    epe_id_employee NUMBER(8) NOT NULL,
    cook_training   VARCHAR2(4) NOT NULL
);

ALTER TABLE cook
    ADD CONSTRAINT ch_inh_cook CHECK ( cook_training IN ( 'COOK' ) );

ALTER TABLE cook ADD CONSTRAINT cook_pk PRIMARY KEY ( epe_id_employee );

CREATE TABLE credit_card (
    trn_id       NUMBER(7) NOT NULL,
    crd_no_kartu CHAR(16),
    crd_cvc      CHAR(3)
);

ALTER TABLE credit_card ADD CONSTRAINT credit_card_pk PRIMARY KEY ( trn_id );

CREATE TABLE customers (
    id_customer     NUMBER(8) NOT NULL,
    first_name      VARCHAR2(25) NOT NULL,
    last_name       VARCHAR2(25) NOT NULL,
    email           VARCHAR2(25) NOT NULL,
    phone           VARCHAR2(15) NOT NULL,
    address         VARCHAR2(150) NOT NULL,
    city            VARCHAR2(20) NOT NULL,
    country         VARCHAR2(20) NOT NULL,
    zip_code        NUMBER(10) NOT NULL,
    orders_id_order NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX customers__idx ON
    customers (
        orders_id_order
    ASC );

ALTER TABLE customers ADD CONSTRAINT customers_pk PRIMARY KEY ( id_customer );

CREATE TABLE delivery (
    id_delivery  NUMBER(7) NOT NULL,
    name         VARCHAR2(50) NOT NULL,
    phone        VARCHAR2(15) NOT NULL,
    self_pick_up VARCHAR2(20)
);

ALTER TABLE delivery ADD CONSTRAINT delivery_pk PRIMARY KEY ( id_delivery );

CREATE TABLE employees (
    epe_id_employee         NUMBER(8) NOT NULL,
    epe_first_name          VARCHAR2(25) NOT NULL,
    epe_last_name           VARCHAR2(25) NOT NULL,
    epe_birth_date          DATE NOT NULL,
    epe_address             VARCHAR2(150) NOT NULL,
    epe_phone               VARCHAR2(15) NOT NULL,
    epe_city                VARCHAR2(20) NOT NULL,
    epe_country             VARCHAR2(20) NOT NULL,
    epe_zip_code            NUMBER(10) NOT NULL,
    epe_hire_date           DATE NOT NULL,
    epe_salary              INTEGER NOT NULL,
    manager_epe_id_employee NUMBER(8)
);

ALTER TABLE employees ADD CONSTRAINT employees_pk PRIMARY KEY ( epe_id_employee );

CREATE TABLE "E-WALLET" (
    trn_id           NUMBER(7) NOT NULL,
    "E-WALLET_No_Hp" VARCHAR2(15)
);

ALTER TABLE "E-WALLET" ADD CONSTRAINT "E-WALLET_PK" PRIMARY KEY ( trn_id );

CREATE TABLE manager (
    epe_id_employee NUMBER(8) NOT NULL,
    budget          INTEGER,
    target_revenue  INTEGER
);

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( epe_id_employee );

CREATE TABLE menus (
    id_menu     NUMBER(7) NOT NULL,
    name        VARCHAR2(50) NOT NULL,
    description VARCHAR2(20) NOT NULL,
    price       INTEGER NOT NULL
);

ALTER TABLE menus ADD CONSTRAINT menus_pk PRIMARY KEY ( id_menu );

CREATE TABLE order_details (
    quantity        INTEGER NOT NULL,
    menus_id_menu   NUMBER(7) NOT NULL,
    orders_id_order NUMBER(7) NOT NULL
);

ALTER TABLE order_details ADD CONSTRAINT order_details_pk PRIMARY KEY ( menus_id_menu,
                                                                        orders_id_order );

CREATE TABLE order_taker (
    epe_id_employee     NUMBER(8) NOT NULL,
    taker_overtime_rate NUMBER
);

ALTER TABLE order_taker ADD CONSTRAINT order_taker_pk PRIMARY KEY ( epe_id_employee );

CREATE TABLE orders (
    id_order                  NUMBER(7) NOT NULL,
    order_date                DATE NOT NULL,
    total_price               INTEGER NOT NULL,
    employees_epe_id_employee NUMBER(8) NOT NULL,
    reservations_id_resv      NUMBER(7) NOT NULL,
    transactions_trn_id       NUMBER(7) NOT NULL,
    customers_id_customer     NUMBER(8) NOT NULL,
    delivery_id_delivery      NUMBER(7)
);

CREATE UNIQUE INDEX orders__idx ON
    orders (
        customers_id_customer
    ASC );

CREATE UNIQUE INDEX orders__idxv1 ON
    orders (
        reservations_id_resv
    ASC );

CREATE UNIQUE INDEX orders__idxv2 ON
    orders (
        transactions_trn_id
    ASC );

ALTER TABLE orders ADD CONSTRAINT orders_pk PRIMARY KEY ( id_order );

CREATE TABLE other (
    epe_id_employee NUMBER(8) NOT NULL
);

ALTER TABLE other ADD CONSTRAINT other_pk PRIMARY KEY ( epe_id_employee );

CREATE TABLE reservations (
    id_resv     NUMBER(7) NOT NULL,
    start_date  DATE NOT NULL,
    end_date    DATE NOT NULL,
    status      VARCHAR2(30) NOT NULL,
    id_customer CHAR(15) NOT NULL
);

ALTER TABLE reservations ADD CONSTRAINT reservations_pk PRIMARY KEY ( id_resv );

CREATE TABLE tables (
    no_table             NUMBER(7) NOT NULL,
    capacity             NUMBER NOT NULL,
    description          VARCHAR2(20),
    reservations_id_resv NUMBER(7) NOT NULL
);

ALTER TABLE tables ADD CONSTRAINT tables_pk PRIMARY KEY ( no_table );

CREATE TABLE transactions (
    trn_id          NUMBER(7) NOT NULL,
    trn_date_pay    DATE NOT NULL,
    trn_total_pay   INTEGER NOT NULL,
    orders_id_order NUMBER(7) NOT NULL,
    bills_id_bill   NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX transactions__idx ON
    transactions (
        bills_id_bill
    ASC );

CREATE UNIQUE INDEX transactions__idxv1 ON
    transactions (
        orders_id_order
    ASC );

ALTER TABLE transactions ADD CONSTRAINT transactions_pk PRIMARY KEY ( trn_id );

ALTER TABLE bills
    ADD CONSTRAINT bills_transactions_fk FOREIGN KEY ( transactions_trn_id )
        REFERENCES transactions ( trn_id );

ALTER TABLE cash
    ADD CONSTRAINT cash_transactions_fk FOREIGN KEY ( trn_id )
        REFERENCES transactions ( trn_id );

ALTER TABLE cook
    ADD CONSTRAINT cook_employees_fk FOREIGN KEY ( epe_id_employee )
        REFERENCES employees ( epe_id_employee );

ALTER TABLE credit_card
    ADD CONSTRAINT credit_card_transactions_fk FOREIGN KEY ( trn_id )
        REFERENCES transactions ( trn_id );

ALTER TABLE customers
    ADD CONSTRAINT customers_orders_fk FOREIGN KEY ( orders_id_order )
        REFERENCES orders ( id_order );

ALTER TABLE employees
    ADD CONSTRAINT employees_manager_fk FOREIGN KEY ( manager_epe_id_employee )
        REFERENCES manager ( epe_id_employee );

ALTER TABLE "E-WALLET"
    ADD CONSTRAINT "E-WALLET_TRANSACTIONS_FK" FOREIGN KEY ( trn_id )
        REFERENCES transactions ( trn_id );

ALTER TABLE manager
    ADD CONSTRAINT manager_employees_fk FOREIGN KEY ( epe_id_employee )
        REFERENCES employees ( epe_id_employee );

ALTER TABLE order_details
    ADD CONSTRAINT order_details_menus_fk FOREIGN KEY ( menus_id_menu )
        REFERENCES menus ( id_menu );

ALTER TABLE order_details
    ADD CONSTRAINT order_details_orders_fk FOREIGN KEY ( orders_id_order )
        REFERENCES orders ( id_order );

ALTER TABLE order_taker
    ADD CONSTRAINT order_taker_employees_fk FOREIGN KEY ( epe_id_employee )
        REFERENCES employees ( epe_id_employee );

ALTER TABLE orders
    ADD CONSTRAINT orders_customers_fk FOREIGN KEY ( customers_id_customer )
        REFERENCES customers ( id_customer );

ALTER TABLE orders
    ADD CONSTRAINT orders_delivery_fk FOREIGN KEY ( delivery_id_delivery )
        REFERENCES delivery ( id_delivery );

ALTER TABLE orders
    ADD CONSTRAINT orders_employees_fk FOREIGN KEY ( employees_epe_id_employee )
        REFERENCES employees ( epe_id_employee );

ALTER TABLE orders
    ADD CONSTRAINT orders_reservations_fk FOREIGN KEY ( reservations_id_resv )
        REFERENCES reservations ( id_resv );

ALTER TABLE orders
    ADD CONSTRAINT orders_transactions_fk FOREIGN KEY ( transactions_trn_id )
        REFERENCES transactions ( trn_id );

ALTER TABLE other
    ADD CONSTRAINT other_employees_fk FOREIGN KEY ( epe_id_employee )
        REFERENCES employees ( epe_id_employee );

ALTER TABLE tables
    ADD CONSTRAINT tables_reservations_fk FOREIGN KEY ( reservations_id_resv )
        REFERENCES reservations ( id_resv );

ALTER TABLE transactions
    ADD CONSTRAINT transactions_bills_fk FOREIGN KEY ( bills_id_bill )
        REFERENCES bills ( id_bill );

ALTER TABLE transactions
    ADD CONSTRAINT transactions_orders_fk FOREIGN KEY ( orders_id_order )
        REFERENCES orders ( id_order );

CREATE OR REPLACE TRIGGER arc_fkarc_1_other BEFORE
    INSERT OR UPDATE OF epe_id_employee ON other
    FOR EACH ROW
DECLARE
    d NUMBER(8);
BEGIN
    SELECT
        a.epe_id_employee
    INTO d
    FROM
        employees a
    WHERE
        a.epe_id_employee = :new.epe_id_employee;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK OTHER_EMPLOYEES_FK in Table OTHER violates Arc constraint on Table EMPLOYEES - discriminator column EPE_Id_Employee doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_order_taker BEFORE
    INSERT OR UPDATE OF epe_id_employee ON order_taker
    FOR EACH ROW
DECLARE
    d NUMBER(8);
BEGIN
    SELECT
        a.epe_id_employee
    INTO d
    FROM
        employees a
    WHERE
        a.epe_id_employee = :new.epe_id_employee;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK ORDER_TAKER_EMPLOYEES_FK in Table ORDER_TAKER violates Arc constraint on Table EMPLOYEES - discriminator column EPE_Id_Employee doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_cook BEFORE
    INSERT OR UPDATE OF epe_id_employee ON cook
    FOR EACH ROW
DECLARE
    d NUMBER(8);
BEGIN
    SELECT
        a.epe_id_employee
    INTO d
    FROM
        employees a
    WHERE
        a.epe_id_employee = :new.epe_id_employee;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK COOK_EMPLOYEES_FK in Table COOK violates Arc constraint on Table EMPLOYEES - discriminator column EPE_Id_Employee doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_manager BEFORE
    INSERT OR UPDATE OF epe_id_employee ON manager
    FOR EACH ROW
DECLARE
    d NUMBER(8);
BEGIN
    SELECT
        a.epe_id_employee
    INTO d
    FROM
        employees a
    WHERE
        a.epe_id_employee = :new.epe_id_employee;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK MANAGER_EMPLOYEES_FK in Table MANAGER violates Arc constraint on Table EMPLOYEES - discriminator column EPE_Id_Employee doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_cash BEFORE
    INSERT OR UPDATE OF trn_id ON cash
    FOR EACH ROW
DECLARE
    d NUMBER(7);
BEGIN
    SELECT
        a.trn_id
    INTO d
    FROM
        transactions a
    WHERE
        a.trn_id = :new.trn_id;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK CASH_TRANSACTIONS_FK in Table CASH violates Arc constraint on Table TRANSACTIONS - discriminator column TRN_Id doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_credit_card BEFORE
    INSERT OR UPDATE OF trn_id ON credit_card
    FOR EACH ROW
DECLARE
    d NUMBER(7);
BEGIN
    SELECT
        a.trn_id
    INTO d
    FROM
        transactions a
    WHERE
        a.trn_id = :new.trn_id;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK CREDIT_CARD_TRANSACTIONS_FK in Table CREDIT_CARD violates Arc constraint on Table TRANSACTIONS - discriminator column TRN_Id doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER "ARC_FKArc_2_E-WALLET" BEFORE
    INSERT OR UPDATE OF trn_id ON "E-WALLET"
    FOR EACH ROW
DECLARE
    d NUMBER(7);
BEGIN
    SELECT
        a.trn_id
    INTO d
    FROM
        transactions a
    WHERE
        a.trn_id = :new.trn_id;

    IF ( d IS NULL OR d <> 50 ) THEN
        raise_application_error(-20223,
                               'FK "E-WALLET_TRANSACTIONS_FK" in Table "E-WALLET" violates Arc constraint on Table TRANSACTIONS - discriminator column TRN_Id doesn''t have value 50');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            17
-- CREATE INDEX                             7
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
